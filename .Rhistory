geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra Under 2 Nitrogen Application', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
View(data)
View(spectra.blups.sub.melt)
data <- spectra.blups.sub.melt %>% group_by(wavelength,Trt) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
data$wavelength <- as.numeric(data$wavelength)
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.7)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra Under 2 Nitrogen Application', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
plt_blups <- ggplot(data=data, aes(x=wavelength, group= Trt)) +
geom_line(aes(y=mean.ref, color=Trt), size = 0.7)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=Trt),alpha=0.4)+
labs(title = 'Leaf Spectra Under 2 Nitrogen Application', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
str(spectra.blups.melt.2)
a <- sapply(strsplit(as.character(spectra.blups.melt.2$variable), '[.]'), '[[', 1)
spectra.blups.melt.2$wavelength <- as.numeric(substr(a,2,5))
str(spectra.blups.melt.2)
data <- spectra.blups.melt.2 %>% group_by(wavelength,Trt) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
str(data)
plt_blups <- ggplot(data=data, aes(x=wavelength, group= Trt)) +
geom_line(aes(y=mean.ref, color=Trt), size = 0.7)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=Trt),alpha=0.4)+
labs(title = 'Leaf Spectra Under 2 Nitrogen Application', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
data <- spectra.blups.melt.2 %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.7)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra Under 2 Nitrogen Application', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
data <- spectra.blups.melt.2[spectra.blups.melt.2$Trt == 'HN',] %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.7)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra Under 2 Nitrogen Application', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.7)+
#geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra Under 2 Nitrogen Application', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.5)+
#geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra inbred vs hybrids under LN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.5)+
#geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra inbred vs hybrids under LN') #, caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.5)+
#geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra inbred vs hybrids under LN') #, caption = '**Envelopes represent 1 sd from the mean')+
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.5)+
#geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra inbred vs hybrids under LN')+ #, caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.5)+
#geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN')+ #, caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
data <- spectra.blups.melt.2[spectra.blups.melt.2$Trt == 'LN',] %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.5)+
#geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra inbred vs hybrids under LN')+ #, caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.5)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.4)+
labs(title = 'Leaf Spectra inbred vs hybrids under LN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.8)+
labs(title = 'Leaf Spectra inbred vs hybrids under LN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under LN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
data <- spectra.blups.melt.2[spectra.blups.melt.2$Trt == 'HN',] %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
## Adding a new column named 'Group' indicating hybrids and inbreds
blups <- read.csv('spectra_blups.csv')
str(blups)
## Adding a new column named 'Group' indicating hybrids and inbreds
blups <- read.csv('spectra_blups.csv')
str(blups)
blups$genotype <- as.factor(blups$genotype)
blups$PLOT.ID <- as.factor(blups$PLOT.ID)
blups$rows <- as.factor(blups$rows)
blups$ranges <- as.factor(blups$ranges)
blups$Block <- as.factor(blups$Block)
blups$Rep <- as.factor(blups$Rep)
blups$Trt <- as.factor(blups$Trt)
blups$year <- as.factor(blups$year)
blups$note <-as.factor(blups$note)
blups$Calibration <- as.factor(blups$Calibration)
blups$ASD <- as.factor(blups$ASD)
## adding 'hybrid or inbred' column
group <- c()
for(i in 1:length(blups$note)){
note <- blups$note[i]
if(note == 'Hybrid'){
group <- c(group, 'Hybrid')
}
else
group <- c(group, 'Inbred')
}
blups <- blups %>% mutate(Group = group, .before= note)
blups <- blups %>% filter(Rep == 1) #removing rep1
write.csv(blups_merged, './spectra_blups.csv', row.names = FALSE)
gc()
library(ggplot2)
library(MASS)
blups <- read.csv('spectra_blups.csv')
str(blups)
blups$genotype <- as.factor(blups$genotype)
blups$PLOT.ID <- as.factor(blups$PLOT.ID)
blups$rows <- as.factor(blups$rows)
blups$ranges <- as.factor(blups$ranges)
blups$Block <- as.factor(blups$Block)
blups$Rep <- as.factor(blups$Rep)
blups$Trt <- as.factor(blups$Trt)
blups$year <- as.factor(blups$year)
blups$note <-as.factor(blups$note)
blups$Calibration <- as.factor(blups$Calibration)
blups$ASD <- as.factor(blups$ASD)
blups$Group <- as.factor(blups$Group)
colnames(blups)
blups.sub <- subset(blups, select = -c(genotype, PLOT.ID, rows, ranges, Block, Rep, Trt, year,note, Calibration, ASD))
View(blups.sub)
str(blups.sub)
view(blups)
View(blups)
blups<- blups[blups$Rep == 1, ]
str(blups)
blups$genotype <- as.factor(blups$genotype)
blups$PLOT.ID <- as.factor(blups$PLOT.ID)
blups$rows <- as.factor(blups$rows)
blups$ranges <- as.factor(blups$ranges)
blups$Block <- as.factor(blups$Block)
blups$Rep <- as.factor(blups$Rep)
blups$Trt <- as.factor(blups$Trt)
blups$year <- as.factor(blups$year)
blups$note <-as.factor(blups$note)
blups$Calibration <- as.factor(blups$Calibration)
blups$ASD <- as.factor(blups$ASD)
blups$Group <- as.factor(blups$Group)
blups.sub <- subset(blups, select = -c(genotype, PLOT.ID, rows, ranges, Block, Rep, Trt, year,note, Calibration, ASD))
test <- blups.sub[!sample, ]
#Use 70% of dataset as training set and remaining 30% as testing set
sample <- sample(c(TRUE, FALSE), nrow(blups.sub), replace=TRUE, prob=c(0.7,0.3))
train <- blups.sub[sample, ]
test <- blups.sub[!sample, ]
#fit LDA model
model <- lda(Group~., data=train)
#view model output
model
#view model output
model[1]
#view model output
model[2]
#use LDA model to make predictions on test data
predicted <- predict(model, test)
names(predicted)
#view predicted class for first six observations in test set
head(predicted$class)
#view posterior probabilities for first six observations in test set
head(predicted$posterior)
#view linear discriminants for first six observations in test set
head(predicted$x)
#find accuracy of model
mean(predicted$class==test$Species)
#find accuracy of model
mean(predicted$class==test$Group)
#define data to plot
lda_plot <- cbind(train, predict(model)$x)
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point(aes(color = Group))
blups.sub <- subset(blups, select = -c(genotype, PLOT.ID, rows, ranges, Block, Rep, Trt, year,Group, Calibration, ASD))
#Use 70% of dataset as training set and remaining 30% as testing set
sample <- sample(c(TRUE, FALSE), nrow(blups.sub), replace=TRUE, prob=c(0.7,0.3))
train <- blups.sub[sample, ]
test <- blups.sub[!sample, ]
#fit LDA model
model <- lda(note~., data=train)
#view model output
model[2]
#use LDA model to make predictions on test data
predicted <- predict(model, test)
names(predicted)
#view predicted class for first six observations in test set
head(predicted$class)
#view posterior probabilities for first six observations in test set
head(predicted$posterior)
#view linear discriminants for first six observations in test set
head(predicted$x)
#find accuracy of model
mean(predicted$class==test$Group)
#view predicted class for first six observations in test set
head(predicted$class)
#find accuracy of model
mean(predicted$class==test$Group)
#define data to plot
lda_plot <- cbind(train, predict(model)$x)
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point(aes(color = Group))
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point(aes(color = note))
blups <- read.csv('spectra_blups.csv')
blups<- blups[blups$Rep == 1, ]
str(blups)
blups$genotype <- as.factor(blups$genotype)
blups$PLOT.ID <- as.factor(blups$PLOT.ID)
blups$rows <- as.factor(blups$rows)
blups$ranges <- as.factor(blups$ranges)
blups$Block <- as.factor(blups$Block)
blups$Rep <- as.factor(blups$Rep)
blups$Trt <- as.factor(blups$Trt)
blups$year <- as.factor(blups$year)
blups$note <-as.factor(blups$note)
blups$Calibration <- as.factor(blups$Calibration)
blups$ASD <- as.factor(blups$ASD)
blups$Group <- as.factor(blups$Group)
blups.sub <- subset(blups, select = -c(genotype, PLOT.ID, rows, ranges, Block, Rep, Trt, year,Group, Calibration, ASD))
#Use 70% of dataset as training set and remaining 30% as testing set
sample <- sample(c(TRUE, FALSE), nrow(blups.sub), replace=TRUE, prob=c(0.7,0.3))
train <- blups.sub[sample, ]
test <- blups.sub[!sample, ]
#fit LDA model
model <- lda(note~., data=train)
#view model output
model[1]
#use LDA model to make predictions on test data
predicted <- predict(model, test)
names(predicted)
#view predicted class for first six observations in test set
head(predicted$class)
#view posterior probabilities for first six observations in test set
head(predicted$posterior)
#view linear discriminants for first six observations in test set
head(predicted$x)
#find accuracy of model
mean(predicted$class==test$Group)
#find accuracy of model
mean(predicted$class==test$note)
#define data to plot
lda_plot <- cbind(train, predict(model)$x)
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point(aes(color = note))
gc()
names(predicted)
View(predicted)
View(lda_plat$data)
View(lda_plot$data)
View(lda_plot)
View(predict(model)$x)
blups.sub <- subset(blups, select = -c(genotype, PLOT.ID, rows, ranges, Block, Rep, Trt, year,Group, Calibration, ASD))
#Use 70% of dataset as training set and remaining 30% as testing set
sample <- sample(c(TRUE, FALSE), nrow(blups.sub), replace=TRUE, prob=c(0.7,0.3))
train <- blups.sub[sample, ]
test <- blups.sub[!sample, ]
#fit LDA model
model <- lda(note~., data=train)
#view model output
model[1]
#use LDA model to make predictions on test data
predicted <- predict(model, test)
names(predicted)
#view predicted class for first six observations in test set
head(predicted$class)
#view posterior probabilities for first six observations in test set
head(predicted$posterior)
#view linear discriminants for first six observations in test set
head(predicted$x)
#find accuracy of model
mean(predicted$class==test$note)
#define data to plot
lda_plot <- cbind(train, predict(model)$x)
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point(aes(color = note))
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point()
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point(aes(color = note))
#define data to plot
lda_plot <- cbind(train, predict(model)$x)
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point(aes(color = note))
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point(aes(color = note), size=0.01)
#create plot
ggplot(lda_plot, aes(LD1, LD2)) +
geom_point(aes(color = note), size=5)
#find accuracy of model
mean(predicted$class==test$note)
rm(list=ls(hybrid1))
rm(list=ls('hybrid1'))
View(heterosis.val_LN)
rm(c(hybrid1))
rm(c('hybrid1'))
rm(list= hybrid1)
rm(hybrid1)
rm(hybrid3, hybrid4)
rm(hybrid5, hybrid6, LN, merged_1, merged_2, Michigan_2020_H2, Nebraska_2020_H2, p, p1, p2, p3, p4 , p5 ,p6, p7, p8, p9, plot,spectra.list, a)
rm(copy)
gc()
rm(bands_df, bands.H2)
gc()
rm(spectra.blups.melt.2)
gc()
rm(spectra.blups.sub.melt)
gc()
rm(blups.melt)
gc()
########################   CALCULATION OF Better-PARENT HETEROSIS   #####################################
## heterosis calculation for low nitrogen condition
blups_LN <- blups[blups$Trt == 'LN' & blups$Rep == 1 ,]
het <- blups_LN %>% filter(grepl(' X ', genotype))
r
r
r
library(Matrix)
library(lme4)
library(reshape2)
library(rrBLUP)
library(ggplot2)
library(tidyverse)
library(zoom)
library(ggforce)
library(cowplot)
het <- blups_LN %>% filter(grepl(' X ', genotype))
heterosis.val_LN <- expand.grid(bands= 350:2500, genotype = het$genotype)
heterosis.val_LN$heterosis <- NA
for(i in 1:length(het$genotype)){
for(j in 12:length(colnames(het))){
hybrid <- as.character(het$genotype[i])
female <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][1]
male <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][2]
if(mean(blups_LN$genotype %in% c(female)) > 0 & mean(blups_LN$genotype %in% c(male) > 0 )) {
female2 <- mean(blups_LN[which(blups_LN$genotype == female ), j])
male2 <- mean(blups_LN[which(blups_LN$genotype == male ), j])
better <- min(c(female2, male2))
hybrid2 <- mean(blups_LN[which(blups_LN$genotype == hybrid ), j])
heterosis <- (hybrid2-better)/better*100
heterosis.val_LN[heterosis.val_LN$bands == j+338 & heterosis.val_LN$genotype == hybrid , 'heterosis'] <- heterosis
print(i)
print(j)
}
else
print('pass')
}
}
heterosis.val_LN <- expand.grid(bands= 350:2500, genotype = het$genotype)
heterosis.val_LN$heterosis <- NA
for(i in 1:length(het$genotype)){
for(j in 12:length(colnames(het))){
hybrid <- as.character(het$genotype[i])
female <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][1]
male <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][2]
if(mean(blups_LN$genotype %in% c(female)) > 0 & mean(blups_LN$genotype %in% c(male) > 0 )) {
female2 <- mean(blups_LN[which(blups_LN$genotype == female ), j])
male2 <- mean(blups_LN[which(blups_LN$genotype == male ), j])
better <- min(c(female2, male2))
hybrid2 <- mean(blups_LN[which(blups_LN$genotype == hybrid ), j])
heterosis <- (better-hybrid2)/better*100
heterosis.val_LN[heterosis.val_LN$bands == j+338 & heterosis.val_LN$genotype == hybrid , 'heterosis'] <- heterosis
print(i)
print(j)
}
else
print('pass')
}
}
males <- c()
for(i in 1:length(heterosis.val_LN$genotype)){
male <- strsplit(as.character(heterosis.val_LN$genotype[i]), ' X ')[[1]][2]
males<- c(males,  male)
print(i)
}
p1 <-ggplot(data=heterosis.val_LN , aes(x=bands, y=heterosis, group=genotype, colour=male)) +
geom_line(size=0.4, alpha=0.6)+
labs(title='Better-Parent Heterosis in Low-Nitrogen', x='bands', y='heterosis %')
p1
## heterosis calculation for high nitrogen condition
blups_HN <- blups[blups$Trt == 'HN' & blups$Rep == 1 ,]
het <- blups_HN %>% filter(grepl(' X ', genotype))
heterosis.val_HN <- expand.grid(bands= 350:2500, genotype = het$genotype)
heterosis.val_HN$heterosis <- NA
for(i in 1:length(het$genotype)){
for(j in 12:length(colnames(het))){
hybrid <- as.character(het$genotype[i])
female <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][1]
male <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][2]
if(mean(blups_HN$genotype %in% c(female)) > 0 & mean(blups_HN$genotype %in% c(male) > 0 )) {
female2 <- mean(blups_HN[which(blups_HN$genotype == female ), j])
male2 <- mean(blups_HN[which(blups_HN$genotype == male ), j])
lower <- max(c(female2, male2))
hybrid2 <- mean(blups_HN[which(blups_HN$genotype == hybrid ), j])
heterosis <- (lower-hybrid2)/lower*100
heterosis.val_HN[heterosis.val_HN$bands == j+338 & heterosis.val_HN$genotype == hybrid , 'heterosis'] <- heterosis
print(i)
print(j)
}
else
print('pass')
}
}
males <- c()
for(i in 1:length(heterosis.val_HN$genotype)){
male <- strsplit(as.character(heterosis.val_HN$genotype[i]), ' X ')[[1]][2]
males<- c(males,  male)
print(i)
}
heterosis.val_HN$male <- males
heterosis.val_HN$male <- males
heterosis.val_HN$male <- factor(heterosis.val_HN$male)
copy <- heterosis.val_HN
p2 <- ggplot(data=heterosis.val_HN[heterosis.val_HN$male %in% c('B73', 'Mo17'),], aes(x=bands, y=heterosis, group=genotype, colour=male)) +
geom_line(size=0.4, alpha=0.6)+
labs(title='Better-Parent Heterosis in High-Nitrogen', x='bands', y='heterosis %')
p2
males <- c()
for(i in 1:length(heterosis.val_HN$genotype)){
male <- strsplit(as.character(heterosis.val_HN$genotype[i]), ' X ')[[1]][2]
males<- c(males,  male)
print(i)
}
heterosis.val_HN$male <- males
########################   CALCULATION OF Better-PARENT HETEROSIS   #####################################
## heterosis calculation for low nitrogen condition
blups_LN <- blups[blups$Trt == 'LN' & blups$Rep == 1 ,]
het <- blups_LN %>% filter(grepl(' X ', genotype))
heterosis.val_LN <- expand.grid(bands= 350:2500, genotype = het$genotype)
heterosis.val_LN$heterosis <- NA
for(i in 1:length(het$genotype)){
for(j in 12:length(colnames(het))){
hybrid <- as.character(het$genotype[i])
female <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][1]
male <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][2]
if(mean(blups_LN$genotype %in% c(female)) > 0 & mean(blups_LN$genotype %in% c(male) > 0 )) {
female2 <- mean(blups_LN[which(blups_LN$genotype == female ), j])
male2 <- mean(blups_LN[which(blups_LN$genotype == male ), j])
lower <- min(c(female2, male2))
hybrid2 <- mean(blups_LN[which(blups_LN$genotype == hybrid ), j])
heterosis <- (lower-hybrid2)/lower*100
heterosis.val_LN[heterosis.val_LN$bands == j+338 & heterosis.val_LN$genotype == hybrid , 'heterosis'] <- heterosis
print(i)
print(j)
}
else
print('pass')
}
}
males <- c()
for(i in 1:length(heterosis.val_LN$genotype)){
male <- strsplit(as.character(heterosis.val_LN$genotype[i]), ' X ')[[1]][2]
males<- c(males,  male)
print(i)
}
heterosis.val_LN$male <- males
