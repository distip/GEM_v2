geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.70,1)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.70,1)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.70,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.7,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.6,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.5,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.4,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.3,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.1,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity', aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity' , aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity' , aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity' , aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
ylim(0.75,1.0)+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity' , aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
coord_cartesian(ylim=c(0.70, 1.0))+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity' , aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
coord_cartesian(ylim=c(0.5, 1.0))+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity' , aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
coord_cartesian(ylim=c(0.75, 1.0))+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity' , aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
coord_cartesian(ylim=c(0.75, 0.9))+
theme_bw(16)
ggplot(bands.H2[bands.H2$Trt == 'LN', ]) +
geom_bar(stat = 'identity' , aes(x= bands, y=H2))+
labs(title = 'Broad Sense Heritabilities')+
coord_cartesian(ylim=c(0.50, 1))+
theme_bw(16)
library(lme4)
library(reshape2)
library(ggplot2)
library(rrBLUP)
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
View(spectra)
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
str(spectra)
spectra$Rep <- factor(spectra$Rep)
spectra$Block <- factor(spectra$Block)
spectra$year <- factor(spectra$year)
spectra$genotype <- factor(spectra$genotype)
spectra$note <- factor(spectra$note)
spectra$Trt <- factor(spectra$Trt)
spectra$ASD <- factor(spectra$ASD)
spectra$Group <- factor(spectra$Group)
spectra$rows <- factor(spectra$rows)
spectra$ranges <- factor(spectra$ranges)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra$ASD  <- factor(spectra$ASD)
spectra$Calibration <- factor(spectra$Calibration)
View(spectra)
spectra <- subset(spectra, select = -c(Unnamed..0, X))
spectra <- spectra %>% relocate(CHL , .before = 'X350')
new_GID <- paste(spectra$genotype, spectra$Trt, sep= "_")
spectra_comb <- add_column(spectra, new_GID = new_GID, .after='PLOT.ID')
str(spectra_comb)
spectra_comb$Rep <- factor(spectra_comb$Rep)
spectra_comb$Block <- factor(spectra_comb$Block)
spectra_comb$year <- factor(spectra_comb$year)
new_GID <- paste(spectra$genotype, spectra$Trt, sep= "_")
spectra_comb <- add_column(spectra, new_GID = new_GID, .after='PLOT.ID')
library(Matrix)
library(lme4)
library(reshape2)
library(rrBLUP)
library(ggplot2)
library(tidyverse)
library(viridisLite)
library(viridis)
spectra_comb <- add_column(spectra, new_GID = new_GID, .after='PLOT.ID')
str(spectra_comb)
spectra_comb$Rep <- factor(spectra_comb$Rep)
spectra_comb$Block <- factor(spectra_comb$Block)
spectra_comb$year <- factor(spectra_comb$year)
spectra_comb$genotype <- factor(spectra_comb$genotype)
spectra_comb$note <- factor(spectra_comb$note)
spectra_comb$Trt <- factor(spectra_comb$Trt)
spectra_comb$ASD <- factor(spectra_comb$ASD)
spectra_comb$Group <- factor(spectra_comb$Group)
spectra_comb$rows <- factor(spectra_comb$rows)
spectra_comb$ranges <- factor(spectra_comb$ranges)
spectra_comb$PLOT.ID <- factor(spectra_comb$PLOT.ID)
spectra_comb$ASD  <- factor(spectra_comb$ASD)
spectra_comb$Calibration <- factor(spectra_comb$Calibration)
spectra_comb$new_GID  <- factor(spectra_comb$new_GID)
levels(spectra_comb$Trt)
View(spectra_comb)
levels(spectra_comb$Trt)
spectra_comb.list<- spectra_comb
View(spectra_comb.list)
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
View(spectra)
str(spectra)
spectra$Rep <- factor(spectra$Rep)
spectra$Block <- factor(spectra$Block)
spectra$year <- factor(spectra$year)
spectra$genotype <- factor(spectra$genotype)
spectra$note <- factor(spectra$note)
spectra$Trt <- factor(spectra$Trt)
spectra$ASD <- factor(spectra$ASD)
spectra$Group <- factor(spectra$Group)
spectra$rows <- factor(spectra$rows)
spectra$ranges <- factor(spectra$ranges)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra$ASD  <- factor(spectra$ASD)
spectra$Calibration <- factor(spectra$Calibration)
spectra <- subset(spectra, select = -c(Unnamed..0, X))
spectra <- spectra %>% relocate(CHL , .before = 'X350')
spectra <- spectra %>% relocate(CHL , .before = 'X350')
new_GID <- paste(spectra$genotype, spectra$Trt, sep= "_")
spectra_comb <- add_column(spectra, new_GID = new_GID, .after='PLOT.ID')
str(spectra_comb)
spectra_comb$Rep <- factor(spectra_comb$Rep)
spectra_comb$Block <- factor(spectra_comb$Block)
spectra_comb$year <- factor(spectra_comb$year)
spectra_comb$genotype <- factor(spectra_comb$genotype)
spectra_comb$note <- factor(spectra_comb$note)
spectra_comb$Trt <- factor(spectra_comb$Trt)
spectra_comb$ASD <- factor(spectra_comb$ASD)
spectra_comb$Group <- factor(spectra_comb$Group)
spectra_comb$rows <- factor(spectra_comb$rows)
spectra_comb$ranges <- factor(spectra_comb$ranges)
spectra_comb$PLOT.ID <- factor(spectra_comb$PLOT.ID)
spectra_comb$ASD  <- factor(spectra_comb$ASD)
spectra_comb$Calibration <- factor(spectra_comb$Calibration)
spectra_comb$new_GID  <- factor(spectra_comb$new_GID)
View(spectra_comb)
spectra_comb.list<- spectra_comb
View(spectra_comb.list)
data<- spectra_comb.list[spectra_comb.list['Group'] == 'Inbred' , ]
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
View(spectra)
str(spectra)
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
View(spectra)
str(spectra)
spectra$Rep <- factor(spectra$Rep)
spectra$Block <- factor(spectra$Block)
spectra$year <- factor(spectra$year)
spectra$genotype <- factor(spectra$genotype)
spectra$note <- factor(spectra$note)
spectra$Trt <- factor(spectra$Trt)
spectra$ASD <- factor(spectra$ASD)
spectra$Group <- factor(spectra$Group)
spectra$rows <- factor(spectra$rows)
spectra$ranges <- factor(spectra$ranges)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra$ASD  <- factor(spectra$ASD)
spectra$Calibration <- factor(spectra$Calibration)
spectra <- subset(spectra, select = -c(Unnamed..0, X))
spectra <- spectra %>% relocate(CHL , .before = 'X350')
spectra_comb.list<- spectra
data<- spectra_comb.list
data.blue.mod<-lmer(CHL~ genotype + (1|Trt) + (1|Rep:Trt) , data=data)
fixef(data.blue.mod)[1:10]
data.int<-fixef(data.blue.mod)[1]
data.int
data.blues<-fixef(data.blue.mod)
data.blues[-1]<-data.blues[-1]+data.int
View(data.blues)
names(spectra.blues.temp)[1]<-levels(spectra$genotype)[1]
names(data.blues)[1]<-levels(spectra$genotype)[1]
View(data.blues)
names(data.blues)[1:10]
gsub("genotype", "", names(data.blues))[1:10]
names(data.blues)<-gsub("genotype", "", names(data.blues))
data.blues[1:10]
data.blues<-data.frame(names(data.blues), data.blues)
colnames(data.blues)<-c("genotype", "CHL")
head(data.blues)
rownames(data.blues) <- NULL
head(data.blues)
hist(data.blues$CHL)
write.csv(data.blues, './blues_CHL.csv', row.names = FALSE)
spectra <- read_csv("Raw_spectrum_merged")
spectra$Rep <- factor(spectra$Rep)
spectra$Block <- factor(spectra$Block)
spectra$year <- factor(spectra$year)
spectra$genotype <- factor(spectra$genotype)
spectra$note <- factor(spectra$note)
spectra$Trt <- factor(spectra$Trt)
spectra$ASD <- factor(spectra$ASD)
spectra$Group <- factor(spectra$Group)
spectra$rows <- factor(spectra$rows)
spectra$ranges <- factor(spectra$ranges)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra$PLOT ID <- factor(spectra$PLOT ID)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra <- read_csv("Raw_spectrum_merged.csv")
spectra <- read_csv("Raw_spectrum_merged.csv")
read.csv('blues_CHL_with_gwas_ids.csv')
################### Calculating BLUPS dor CHL ######################
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL.csv")
################### Calculating BLUPS dor CHL ######################
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
View(spectra)
str(spectra)
################### Calculating BLUPS dor CHL ######################
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL.csv")
View(spectra)
str(spectra)
spectra$Rep <- factor(spectra$Rep)
spectra$Block <- factor(spectra$Block)
spectra$year <- factor(spectra$year)
spectra$genotype <- factor(spectra$genotype)
spectra$note <- factor(spectra$note)
spectra$Trt <- factor(spectra$Trt)
spectra$ASD <- factor(spectra$ASD)
spectra$Group <- factor(spectra$Group)
spectra$rows <- factor(spectra$rows)
spectra$ranges <- factor(spectra$ranges)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra$ASD  <- factor(spectra$ASD)
spectra$Calibration <- factor(spectra$Calibration)
View(spectra
View(spectra
)levels(spectra$Trt)
View(spectra
)
spectra <- spectra %>% relocate(CHL , .before = 'X350')
library(Matrix)
library(lme4)
library(reshape2)
library(rrBLUP)
library(ggplot2)
library(tidyverse)
library(viridisLite)
library(viridis)
library(grid)
spectra <- spectra %>% relocate(CHL , .before = 'X350')
levels(spectra$Trt)
spectra.list <- vector('list' , 2)
spectra.list
for(i in 1:2) {
##The appropriate N can be pulled out using which().
spectra.list[[i]] <- spectra[which(spectra$Trt ==levels(spectra$Trt)[i]),]
### To keep track of where each N appears within the list, names() can be used to
### set the name of each list element to the N
names(spectra.list)[i] <- levels(spectra$Trt)[i]
}
View(spectra.list)
bands <- colnames(spectra)[-c(1:11)]
bands
bands <- colnames(spectra)[c(12)]
bands
Trt <- as.character(levels(spectra$Trt))
Trt
bands.H2 <- expand.grid(bands, Trt)
bands.H2
colnames(bands.H2) <- c('bands', 'Trt')
bands.H2$H2 <- NA
head(bands.H2)
spectra.blups.list <- vector('list', 2)
spectra.blups.list
for(i in 1:2){
### To get started, a dataframe containing only the "gid" column can be created for each
### element of the list.
spectra.blups.list[[i]] <- data.frame(levels(spectra$genotype))
colnames(spectra.blups.list[[i]]) <- 'genotype'
}
View(spectra.blups.list)
names(spectra.blups.list) <- c('HN', 'LN')
for(i in 1:length(spectra.list)){
for(j in 1:length(bands)){
### The hyperspectral data from just one N can be stored in a temporary variable.
temp <- spectra.list[[i]]
### The hyperspectral data from just one band can be pulled out along with the field
### design variables.
temp <- temp[, which(colnames(temp) %in% c('genotype', 'Rep', 'Block', 'ASD', bands[j]))]
colnames(temp)[5] <- 'reflectance'
### The BLUP model is
spectrum.blup.mod <- lmer(reflectance ~ (1|genotype)+(1|ASD)+(1|Rep) , data = temp)
### The variance components can be extracted to calculate broad-sense heritability.
Vg <- data.frame(VarCorr(spectrum.blup.mod))$vcov[1]
Ve <- data.frame(VarCorr(spectrum.blup.mod))$vcov[4]
H2 <- Vg/(Vg+(Ve/2))
### The broad-sense heritability can be put in the appropriate place within the
### bands.H2 dataframe using which().
bands.H2[which(bands.H2$bands == bands[j] & bands.H2$Trt == names(spectra.list)[i]), 'H2'] <- H2
### The BLUPs centered around the mean can also be calculated and stored in a dataframe.
spectra.blups.temp <- ranef(spectrum.blup.mod)$genotype + fixef(spectrum.blup.mod)
spectra.blups.temp <- data.frame(rownames(spectra.blups.temp), spectra.blups.temp)
colnames(spectra.blups.temp) <- c('genotype', bands[j])
### The BLUPs can be merged based on the "genotype" column with the existing dataframes
### in the BLUPs list using the merge() function.
spectra.blups.list[[i]] <- merge(spectra.blups.list[[i]], spectra.blups.temp, by = 'genotype')
### counters can be used to track the progress
print(i)
print(j)
}
}
spectra.list <- vector('list' , 2)
spectra.list
for(i in 1:2) {
##The appropriate N can be pulled out using which().
spectra.list[[i]] <- spectra[which(spectra$Trt ==levels(spectra$Trt)[i]),]
### To keep track of where each N appears within the list, names() can be used to
### set the name of each list element to the N
names(spectra.list)[i] <- levels(spectra$Trt)[i]
}
bands <- colnames(spectra)[c(12)]
bands
Trt <- as.character(levels(spectra$Trt))
Trt
bands.H2 <- expand.grid(bands, Trt)
bands.H2
colnames(bands.H2) <- c('bands', 'Trt')
bands.H2$H2 <- NA
head(bands.H2)
spectra.blups.list <- vector('list', 2)
spectra.blups.list
for(i in 1:2){
### To get started, a dataframe containing only the "gid" column can be created for each
### element of the list.
spectra.blups.list[[i]] <- data.frame(levels(spectra$genotype))
colnames(spectra.blups.list[[i]]) <- 'genotype'
}
names(spectra.blups.list) <- c('HN', 'LN')
for(i in 1:length(spectra.list)){
for(j in 1:length(bands)){
### The hyperspectral data from just one N can be stored in a temporary variable.
temp <- spectra.list[[i]]
### The hyperspectral data from just one band can be pulled out along with the field
### design variables.
temp <- temp[, which(colnames(temp) %in% c('genotype', 'Rep', bands[j]))]
colnames(temp)[3] <- 'reflectance'
### The BLUP model is
spectrum.blup.mod <- lmer(reflectance ~ (1|genotype) +(1|Rep) , data = temp)
### The variance components can be extracted to calculate broad-sense heritability.
Vg <- data.frame(VarCorr(spectrum.blup.mod))$vcov[1]
Ve <- data.frame(VarCorr(spectrum.blup.mod))$vcov[3]
H2 <- Vg/(Vg+(Ve/2))
### The broad-sense heritability can be put in the appropriate place within the
### bands.H2 dataframe using which().
bands.H2[which(bands.H2$bands == bands[j] & bands.H2$Trt == names(spectra.list)[i]), 'H2'] <- H2
### The BLUPs centered around the mean can also be calculated and stored in a dataframe.
spectra.blups.temp <- ranef(spectrum.blup.mod)$genotype + fixef(spectrum.blup.mod)
spectra.blups.temp <- data.frame(rownames(spectra.blups.temp), spectra.blups.temp)
colnames(spectra.blups.temp) <- c('genotype', bands[j])
### The BLUPs can be merged based on the "genotype" column with the existing dataframes
### in the BLUPs list using the merge() function.
spectra.blups.list[[i]] <- merge(spectra.blups.list[[i]], spectra.blups.temp, by = 'genotype')
### counters can be used to track the progress
print(i)
print(j)
}
}
View(spectra)
head(bands.H2)
ggplot(bands.H2, aes(bands, H2)) + geom_bar()+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
View(bands.H2)
ggplot(bands.H2, aes(x=Trt, y=H2)) + geom_bar()+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(x=Trt, y=H2)) + geom_bar()+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(x=Trt)) + geom_bar()+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2)) + geom_bar()+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2)) + geom_bar(group=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2)) + geom_bar(group=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2)) + geom_bar(stat='count', group=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2)) + geom_bar(stat='count', group=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2)) + geom_bar(stat='identity', group=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2, x=Trt)) + geom_bar(stat='identity', group=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2, x=Trt)) + geom_bar(stat='identity', colour=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2, x=Trt)) + geom_bar(stat='identity', colours=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2, x=Trt)) + geom_bar(stat='identity', color=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
ggplot(bands.H2, aes(y=H2, x=Trt)) + geom_bar(stat='identity', Group=Trt)+
labs(title = 'Broad Sense Heritabilities Under Different Nitrogen Applications')+
theme_bw(16)
spectra_columns <- subset(spectra, select = c(1:11))
merged_1 <- merge(spectra_columns[which(spectra_columns$Trt== 'HN'),], spectra.blups.list[['HN']], by = 'genotype')
merged_2 <- merge(spectra_columns[which(spectra_columns$Trt== 'LN'),], spectra.blups.list[['LN']], by = 'genotype')
blups_merged <- merged_1 %>% full_join(merged_2)
write.csv(blups_merged, './CHL_blups.csv', row.names = FALSE)
################Calculating Blups for CHL for both trt######################
View(spectra)
## calculating the BLUPs for spectra
bands <- (colnames(spectra)[c(12)])
bands
bands_df <-as.data.frame(colnames(spectra)[c(12)])
bands_df$H2 <- NA
colnames(bands_df) <- c('band', 'H2')
bands.H2 <- bands_df
View(bands.H2)
spectral.blups.list <- data.frame(levels(spectra$genotype))
colnames(spectral.blups.list) <- 'genotype'
for(i in 1:length(bands)){
temp <- spectra
temp<-temp[, which(colnames(spectra) %in% c('genotype', 'Block', 'Trt', 'Rep', 'ASD', bands[i]))]
colnames(temp)[6] <- 'reflectance'
spectrum.blup.mod<-lmer(reflectance~(1|genotype) + (1|Rep) + (1|Trt) + (1|genotype:Trt), data=temp)
Vg <- data.frame(VarCorr(spectrum.blup.mod))$vcov[1]
Ve <- data.frame(VarCorr(spectrum.blup.mod))$vcov[5]
H2 <- Vg/(Vg+(Ve/3))
bands.H2[which(bands.H2$band==bands[i]), 'H2'] <- H2
spectra.blups.temp <- ranef(spectrum.blup.mod)$genotype + fixef(spectrum.blup.mod)
spectra.blups.temp <- data.frame(rownames(spectra.blups.temp), spectra.blups.temp)
colnames(spectra.blups.temp) <- c('genotype', bands[i])
spectral.blups.list <- merge(spectral.blups.list, spectra.blups.temp, by='genotype')
print(i)
}
View(temp)
