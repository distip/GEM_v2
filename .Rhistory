spectra.list <- vector('list' , 2)
spectra.list
for(i in 1:2) {
##The appropriate N can be pulled out using which().
spectra.list[[i]] <- spectra[which(spectra$Trt ==levels(spectra$Trt)[i]),]
### To keep track of where each N appears within the list, names() can be used to
### set the name of each list element to the N
names(spectra.list)[i] <- levels(spectra$Trt)[i]
}
spectra.blues.list <- vector('list', 2)
spectra.blues.list
for(i in 1:2){
### To get started, a dataframe containing only the "gid" column can be created for each
### element of the list.
spectra.blues.list[[i]] <- data.frame(levels(spectra$genotype))
colnames(spectra.blues.list[[i]]) <- 'genotype'
}
names(spectra.blues.list) <- c('HN', 'LN')
for(i in 1:length(spectra.list)){
for(j in 1:length(bands)){
### The hyperspectral data from just one N can be stored in a temporary variable.
temp <- spectra.list[[i]]
### The hyperspectral data from just one band can be pulled out along with the field
### design variables.
temp <- temp[, which(colnames(temp) %in% c('genotype', 'Rep', 'Block', 'ASD', bands[j]))]
colnames(temp)[5] <- 'reflectance'
### The BLUE model is
spectrum.blue.mod <- lmer(reflectance ~ genotype + (1|ASD) + (1|Rep) ,  data = temp)
### The BLUEs centered around the mean can also be calculated and stored in a dataframe.
spectra.int <- fixef(spectrum.blue.mod)[1]
spectra.blues.temp <- fixef(spectrum.blue.mod)
spectra.blues.temp[-1] <- spectra.blues.temp[-1] + spectra.int
spectra.blues.temp <- data.frame (spectra.blues.temp)
spectra.blues.temp<- cbind(genotype=rownames(spectra.blues.temp), spectra.blues.temp)
rownames(spectra.blues.temp) <- NULL
spectra.blues.temp$genotype <- gsub('genotype', '', spectra.blues.temp$genotype)
colnames(spectra.blues.temp) <- c('genotype', bands[j])
### The BLUPs can be merged based on the "genotype" column with the existing dataframes
### in the BLUPs list using the merge() function.
spectra.blues.list[[i]] <- merge(spectra.blues.list[[i]], spectra.blues.temp, by = 'genotype')
### counters can be used to track the progress
print(i)
print(j)
}
}
names(spectra.blues.list[['HN']]) <- sub('.x', '', names(spectra.blues.list[['HN']]))
spectra_one_rep <- spectra[spectra$Rep == 1,]
spectra_columns <- subset(spectra_one_rep, select = c(1:12))
merged_1 <- merge(spectra_columns[which(spectra_columns$Trt== 'HN'),], spectra.blues.list[['HN']], by = 'genotype')
merged_2 <- merge(spectra_columns[which(spectra_columns$Trt== 'LN'),], spectra.blues.list[['LN']], by = 'genotype')
blues_merged <- merged_1 %>% full_join(merged_2)
write.csv(blues_merged, './spectra_blues.csv', row.names = FALSE)
blues <- read_csv('spectra_blues.csv')
blues <- as.data.frame(blues)
blues <- blues %>% select(-contains(c('.x', '.y', '.z')))
library(FactoMineR)
library(ggplot2)
library(factoextra)
library(tidyverse)
str(blues)
blues$genotype <- as.factor(blues$genotype)
blues$PLOT.ID <- as.factor(blues$PLOT.ID)
blues$rows <- as.factor(blues$rows)
blues$ranges <- as.factor(blues$ranges)
blues$Block <- as.factor(blues$Block)
blues$Rep <- as.factor(blues$Rep)
blues$Trt <- as.factor(blues$Trt)
blues$year <- as.factor(blues$year)
blues$note <-as.factor(blues$note)
blues$Calibration <- as.factor(blues$Calibration)
blues$ASD <- as.factor(blues$ASD)
## adding 'hybrid or inbred' column
group <- c()
for(i in 1:length(blues$note)){
note <- blues$note[i]
if(note == 'Hybrid'){
group <- c(group, 'Hybrid')
}
else
group <- c(group, 'Inbred')
}
View(group)
blues <- blues %>% mutate(Group = group, .before= note)
View(blues)
res.pca <- prcomp(blues[ , 12:length(colnames(blues))], scale = FALSE)
res.pca <- prcomp(blues[ , 13:length(colnames(blues))], scale = FALSE)
basic_plot <- fviz_pca_ind(res.pca, label= 'none')
basic_plot
ggplot(cbind(basic_plot$data, blues[, c('Trt', 'note', 'Group')]), aes(x=x, y=y, shape=Trt, col=Group))+
geom_point(size=2)+
labs(title = 'PCA', x='Dim1 (82.7%)', y= 'Dim2 (12.4%)')+
#stat_ellipse()+
theme_bw(14)
ggplot(cbind(basic_plot$data, blues[, c('Trt', 'note', 'Group')]), aes(x=x, y=y, shape=group, col=Trt))+
geom_point(size=2)+
labs(title = 'PCA', x='Dim1 (82.7%)', y= 'Dim2 (12.4%)')+
#stat_ellipse()+
theme_bw(14)
ggplot(cbind(basic_plot$data, blues[, c('Trt', 'note', 'Group')]), aes(x=x, y=y, shape=group, col=note))+
geom_point(size=2)+
labs(title = 'PCA', x='Dim1 (82.7%)', y= 'Dim2 (12.4%)')+
#stat_ellipse()+
theme_bw(14)
ggplot(cbind(basic_plot$data, blues[, c('Trt', 'note', 'Group')]), aes(x=x, y=y, shape=Trt, col=note))+
geom_point(size=2)+
labs(title = 'PCA', x='Dim1 (82.7%)', y= 'Dim2 (12.4%)')+
#stat_ellipse()+
theme_bw(14)
########################   CALCULATION OF MID-PARENT HETEROSIS   #####################################
## heterosis calculation for low nitrogen condition
blups_LN <- blups[blups$Trt == 'LN' & blups$Rep == 1 ,]
het <- blups_LN %>% filter(grepl(' X ', genotype))
mid.heterosis.val_LN <- expand.grid(bands= 350:2500, genotype = het$genotype)
mid.heterosis.val_LN$heterosis <- NA
for(i in 1:length(het$genotype)){
for(j in 13:length(colnames(het))){
hybrid <- as.character(het$genotype[i])
female <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][1]
male <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][2]
if(mean(blups_LN$genotype %in% c(female)) > 0 & mean(blups_LN$genotype %in% c(male) > 0 )) {
female2 <- mean(blups_LN[which(blups_LN$genotype == female ), j])
male2 <- mean(blups_LN[which(blups_LN$genotype == male ), j])
hybrid2 <- mean(blups_LN[which(blups_LN$genotype == hybrid ), j])
heterosis <- (hybrid2-mean(c(male2,female2)))/mean(c(male2,female2))*100
mid.heterosis.val_LN[mid.heterosis.val_LN$bands == j+337 & mid.heterosis.val_LN$genotype == hybrid , 'heterosis'] <- heterosis
print(i)
print(j)
}
else {
print('pass')
}
}
}
males <- c()
for(i in 1:length(mid.heterosis.val_LN$genotype)){
male <- strsplit(as.character(mid.heterosis.val_LN$genotype[i]), ' X ')[[1]][2]
males<- c(males,  male)
print(i)
}
mid.heterosis.val_LN$male <- males
mid.heterosis.val_LN <- na.omit(mid.heterosis.val_LN)
p1 <-ggplot(data=mid.heterosis.val_LN , aes(x=bands, y=heterosis, group=genotype, colour=male)) +
geom_line(size=0.4, alpha=0.6)+
labs(title='Mid-Parent Heterosis in Low-Nitrogen', x='bands', y='heterosis %')
p1
data <- mid.heterosis.val_LN[mid.heterosis.val_LN$male %in% c('B73', 'Mo17'),] %>% group_by(male,bands) %>%
summarise(mean.heterosis = mean(heterosis, na.rm=TRUE), sd.heterosis = sd(heterosis, na.rm = TRUE), se.heterosis= sd(heterosis, na.rm=TRUE)/sqrt(length(heterosis)),
max = max(heterosis, na.rm = TRUE), min = min(heterosis, na.rm = TRUE))
View(data)
p4 <- ggplot(data=data, aes(x=bands, group= male)) +
geom_line(aes(y=mean.heterosis, color=male), size = 0.7)+
geom_ribbon(aes(ymin=mean.heterosis-sd.heterosis , ymax=mean.heterosis+sd.heterosis , fill=male),alpha=0.4)+
labs(title = 'Mid-parent Heterosis in LN', caption = '**Envelopes represent 1 sd from the mean')
p4
## heterosis calculation for high nitrogen condition
blups_HN <- blups[blups$Trt == 'HN' & blups$Rep == 1 ,]
p4 <- ggplot(data=data, aes(x=bands, group= male)) +
geom_line(aes(y=mean.heterosis, color=male), size = 0.7)+
geom_ribbon(aes(ymin=mean.heterosis-se.heterosis , ymax=mean.heterosis+se.heterosis , fill=male),alpha=0.4)+
labs(title = 'Mid-parent Heterosis in LN', caption = '**Envelopes represent 1 se from the mean')
p4
## heterosis calculation for high nitrogen condition
blups_HN <- blups[blups$Trt == 'HN' & blups$Rep == 1 ,]
het <- blups_HN %>% filter(grepl(' X ', genotype))
mid.heterosis.val_HN <- expand.grid(bands= 350:2500, genotype = het$genotype)
mid.heterosis.val_HN$heterosis <- NA
for(i in 1:length(het$genotype)){
for(j in 12:length(colnames(het))){
hybrid <- as.character(het$genotype[i])
female <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][1]
male <- strsplit(as.character(het$genotype[i]), ' X ')[[1]][2]
if(mean(blups_HN$genotype %in% c(female)) > 0 & mean(blups_HN$genotype %in% c(male) > 0 )) {
female2 <- mean(blups_HN[which(blups_HN$genotype == female ), j])
male2 <- mean(blups_HN[which(blups_HN$genotype == male ), j])
hybrid2 <- mean(blups_HN[which(blups_HN$genotype == hybrid ), j])
heterosis <- (hybrid2-mean(c(male2,female2)))/mean(c(male2,female2))*100
mid.heterosis.val_HN[mid.heterosis.val_HN$bands == j+338 & mid.heterosis.val_HN$genotype == hybrid , 'heterosis'] <- heterosis
print(i)
print(j)
}
else
print('pass')
}
}
males <- c()
for(i in 1:length(mid.heterosis.val_HN$genotype)){
male <- strsplit(as.character(mid.heterosis.val_HN$genotype[i]), ' X ')[[1]][2]
males<- c(males,  male)
print(i)
}
mid.heterosis.val_HN$male <- males
mid.heterosis.val_HN <- na.omit(mid.heterosis.val_HN)
mid.heterosis.val_HN$male <- factor(mid.heterosis.val_HN$male)
p2 <- ggplot(data=mid.heterosis.val_HN[mid.heterosis.val_HN$male %in% c('B73', 'Mo17'),], aes(x=bands, y=heterosis, group=genotype, colour=male)) +
geom_line(size=0.4, alpha=0.6)+
labs(title='Mid-Parent Heterosis in High-Nitrogen', x='bands', y='heterosis %')
p2
data <- mid.heterosis.val_HN[mid.heterosis.val_HN$male %in% c('B73', 'Mo17'),] %>% group_by(male,bands) %>%
summarise(mean.heterosis = mean(heterosis, na.rm=TRUE), sd.heterosis = sd(heterosis, na.rm = TRUE), se.heterosis= sd(heterosis, na.rm=TRUE)/sqrt(length(heterosis)),
max = max(heterosis, na.rm = TRUE), min = min(heterosis, na.rm = TRUE))
dat2 <- mid.heterosis.val_HN[mid.heterosis.val_HN$male %in% c('B73', 'Mo17'),] %>% group_by(male,bands) %>%
summarise(mean.heterosis = mean(heterosis, na.rm=TRUE), sd.heterosis = sd(heterosis, na.rm = TRUE), se.heterosis= sd(heterosis, na.rm=TRUE)/sqrt(length(heterosis)),
max = max(heterosis, na.rm = TRUE), min = min(heterosis, na.rm = TRUE))
data$Trt <- c(rep('LN', length(data$bands)))
data2$Trt <- c(rep('HN', length(data$bands)))
data2$Trt <- c(rep('HN', length(data2$bands)))
plot_data <- data %>% full_join(data2)
p6 <- ggplot(data=plot_data, aes(x=bands, group= male)) +
geom_line(data= plot_data[plot_data$Trt == 'HN',], aes( x= bands,y=mean.heterosis, linetype=male, color= Trt),size = 0.7)+
geom_ribbon(data= plot_data[plot_data$Trt == 'HN',], aes(ymin=mean.heterosis-se.heterosis , ymax=mean.heterosis+se.heterosis),alpha=0.2)+
geom_line(data= plot_data[plot_data$Trt == 'LN',], aes( x= bands,y=mean.heterosis,linetype=male, color = Trt), size = 0.7)+
geom_ribbon(data= plot_data[plot_data$Trt == 'LN',], aes(ymin=mean.heterosis-se.heterosis , ymax=mean.heterosis+se.heterosis),alpha=0.2)+
labs(title = 'Better-parent Heterosis under HN and LN conditions', caption = '**Envelopes represent 1 se from the mean')
p6
p6 <- ggplot(data=plot_data, aes(x=bands, group= male)) +
geom_line(data= plot_data[plot_data$Trt == 'HN',], aes( x= bands,y=mean.heterosis, linetype=male, color= Trt),size = 0.7)+
geom_ribbon(data= plot_data[plot_data$Trt == 'HN',], aes(ymin=mean.heterosis-se.heterosis , ymax=mean.heterosis+se.heterosis),alpha=0.2)+
geom_line(data= plot_data[plot_data$Trt == 'LN',], aes( x= bands,y=mean.heterosis,linetype=male, color = Trt), size = 0.7)+
geom_ribbon(data= plot_data[plot_data$Trt == 'LN',], aes(ymin=mean.heterosis-se.heterosis , ymax=mean.heterosis+se.heterosis),alpha=0.2)+
labs(title = 'Midr-parent Heterosis under HN and LN conditions', caption = '**Envelopes represent 1 se from the mean')
p6
p6 <- ggplot(data=plot_data, aes(x=bands, group= male)) +
geom_line(data= plot_data[plot_data$Trt == 'HN',], aes( x= bands,y=mean.heterosis, linetype=male, color= Trt),size = 0.7)+
geom_ribbon(data= plot_data[plot_data$Trt == 'HN',], aes(ymin=mean.heterosis-se.heterosis , ymax=mean.heterosis+se.heterosis),alpha=0.2)+
geom_line(data= plot_data[plot_data$Trt == 'LN',], aes( x= bands,y=mean.heterosis,linetype=male, color = Trt), size = 0.7)+
geom_ribbon(data= plot_data[plot_data$Trt == 'LN',], aes(ymin=mean.heterosis-se.heterosis , ymax=mean.heterosis+se.heterosis),alpha=0.2)+
labs(title = 'Mid-parent Heterosis under HN and LN conditions', caption = '**Envelopes represent 1 se from the mean')
p6
ggplot(spectra.blues.sub.melt[which(spectra.blues.sub.melt$Trt == 'HN'),], aes(wavelength, value, color=genotype)) +
geom_line(size=0.3)+
theme(legend.position = 'none')
ggplot() +
geom_line(data=spectra.blues.sub.melt[which(spectra.blues.sub.melt$Trt == 'LN'),],aes(wavelength, value, group= genotype, color='LN'), size=0.1)+
geom_line(data=spectra.blues.sub.melt[which(spectra.blues.sub.melt$Trt == 'HN'),], aes(wavelength, value, group= genotype, color='HN'), size=0.1)+
scale_color_manual(name='Treatment',  values = c('HN'= 'green', 'LN' = 'yellow'))
ggplot(data = spectra.blues.sub.melt)+
geom_line(aes(wavelength, value, group=genotype, color=Trt), size=0.1)+
labs(title = 'Leaf spectra (BLUPS)', x='bands', y='reflectance')
data_blues <- blues %>% group_by(wavelength,Trt) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
blues <- melt(blups_merged, id.vars = c('PLOT.ID', 'genotype','rows', 'ranges', 'Block' ,'Rep', 'Trt', 'year', 'note', 'Calibration', 'ASD', 'Group'))
blues_plot <- melt(blues, id.vars = c('PLOT.ID', 'genotype','rows', 'ranges', 'Block' ,'Rep', 'Trt', 'year', 'note', 'Calibration', 'ASD', 'Group'))
a <- sapply(strsplit(as.character(blues$variable), '[.]'), '[[', 1)
blues$wavelength <- as.numeric(substr(a,2,5))
View(blues_plot)
a <- sapply(strsplit(as.character(blues$variable), '[.]'), '[[', 1)
blues$wavelength <- as.numeric(substr(a,2,5))
a
a <- sapply(strsplit(as.character(blues_plot$variable), '[.]'), '[[', 1)
blues$wavelength <- as.numeric(substr(a,2,5))
data$wavelength <- as.numeric(data$wavelength)
a <- sapply(strsplit(as.character(blues_plot$variable), '[.]'), '[[', 1)
blues$wavelength <- as.numeric(substr(a,2,5))
blues_plot <- melt(blues, id.vars = c('PLOT.ID', 'genotype','rows', 'ranges', 'Block' ,'Rep', 'Trt', 'year', 'note', 'Calibration', 'ASD', 'Group'))
a <- sapply(strsplit(as.character(blues_plot$variable), '[.]'), '[[', 1)
blues_plot$wavelength <- as.numeric(substr(a,2,5))
blues_plot$wavelength <- as.numeric(blues_plot$wavelength)
data <- blues_plot[blues_plot$Trt == 'HN',] %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
View(blues_plot)
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-sd.ref , ymax=mean.ref+sd.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
plt_blups <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blups
data <- blues_plot[blues_plot$Trt == 'HN',] %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
ggplot(blues_merged, aes(rows, ranges, color=X730)) +
geom_point(size=1.3) +
scale_y_continuous(name='ranges', limits = c(1,13))+
geom_rect( aes(xmin=0.4, xmax = 51, ymin = 7.5, ymax = 12.5), fill=NA, colour='red')+
#annotate('rect', xmin=0, xmax = 50, ymin = 7.5, ymax = 12.5, alpha= .1)+
facet_wrap(~Trt)+
scale_colour_viridis() +
labs(title = 'BLUEs Corrected \n genotype+(1|ASD)+(1|Block:Rep)', caption = ' Blocks 1 and 4 = + N , 2 and 3 = -N\nred rectangles are the hybrids ')+
theme_classic()
plt_blues <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
data <- blues_plot[blues_plot$Trt == 'HN',] %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
blues_plot <- melt(blues, id.vars = c('PLOT.ID', 'genotype','rows', 'ranges', 'Block' ,'Rep', 'Trt', 'year', 'note', 'Calibration', 'ASD', 'Group'))
a <- sapply(strsplit(as.character(blues_plot$variable), '[.]'), '[[', 1)
blues_plot$wavelength <- as.numeric(substr(a,2,5))
blues_plot$wavelength <- as.numeric(blues_plot$wavelength)
data <- blues_plot[blues_plot$Trt == 'HN',] %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
blues <- read_csv('spectra_blues.csv')
blues <- as.data.frame(blues)
blues <- blues %>% select(-contains(c('.x', '.y', '.z')))
blues <- blues[ , colSums(is.na(blues))==0]
str(blues)
str(blues)
blues <- read_csv('spectra_blues.csv')
blues <- as.data.frame(blues)
blues <- blues %>% select(-contains(c('.x', '.y', '.z')))
blues <- blues[ , colSums(is.na(blues))==0]
str(blues)
blues$genotype <- as.factor(blues$genotype)
blues$PLOT.ID <- as.factor(blues$PLOT.ID)
blues$rows <- as.factor(blues$rows)
blues$ranges <- as.factor(blues$ranges)
blues$Block <- as.factor(blues$Block)
blues$Rep <- as.factor(blues$Rep)
blues$Trt <- as.factor(blues$Trt)
blues$year <- as.factor(blues$year)
blues$note <-as.factor(blues$note)
blues$Calibration <- as.factor(blues$Calibration)
blues$ASD <- as.factor(blues$ASD)
blues <- read_csv('spectra_blues.csv')
blues <- as.data.frame(blues)
View(blues)
str(blues)
blues$genotype <- as.factor(blues$genotype)
blues$PLOT.ID <- as.factor(blues$PLOT.ID)
blues$rows <- as.factor(blues$rows)
blues$ranges <- as.factor(blues$ranges)
blues$Block <- as.factor(blues$Block)
blues$Rep <- as.factor(blues$Rep)
blues$Trt <- as.factor(blues$Trt)
blues$year <- as.factor(blues$year)
blues$note <-as.factor(blues$note)
blues$Calibration <- as.factor(blues$Calibration)
blues$ASD <- as.factor(blues$ASD)
blues_plot <- melt(blues, id.vars = c('PLOT.ID', 'genotype','rows', 'ranges', 'Block' ,'Rep', 'Trt', 'year', 'note', 'Calibration', 'ASD', 'Group'))
a <- sapply(strsplit(as.character(blues_plot$variable), '[.]'), '[[', 1)
blues_plot$wavelength <- as.numeric(substr(a,2,5))
blues_plot$wavelength <- as.numeric(blues_plot$wavelength)
data <- blues_plot[blues_plot$Trt == 'HN',] %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
data <- blues_plot[blues_plot$Trt == 'HN',] %>% group_by(wavelength,note,Group) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
#geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
data <- blues_plot[blues_plot$Trt == 'HN',] %>% group_by(genotype,wavelength,note,Group) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
data <- blues_plot[blues_plot$Trt == 'HN',] %>% group_by(genotype,wavelength,note,Group) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
data <- blues_plot[blues_plot$Trt == 'HN',] %>% group_by(wavelength,note,Group) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
data <- blues_plot[blues_plot$Trt == 'LN',] %>% group_by(wavelength,note,Group) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
#geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
data <- blues_plot %>% group_by(wavelength,note,Group) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
View(blues_plot)
View(data)
plt_blues <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
#geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
data <- blues_plot %>% group_by(wavelength,Group) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
#geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= Group)) +
geom_line(aes(y=mean.ref, color=Group), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=Group),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
plt_blues <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
data <- blues_plot %>% group_by(wavelength,note) %>%
summarise(mean.ref = mean(value, na.rm=TRUE), sd.ref = sd(value, na.rm = TRUE), se.ref= sd(value, na.rm=TRUE)/sqrt(length(value)),
max = max(value, na.rm = TRUE), min = min(value, na.rm = TRUE))
plt_blues <- ggplot(data=data, aes(x=wavelength, group= note)) +
geom_line(aes(y=mean.ref, color=note), size = 0.6)+
geom_ribbon(aes(ymin=mean.ref-se.ref , ymax=mean.ref+se.ref , fill=note),alpha=0.3)+
labs(title = 'Leaf Spectra inbred vs hybrids under HN', caption = '**Envelopes represent 1 sd from the mean')+
theme_bw()
plt_blues
gc()
res.pca <- prcomp(blups[blups$Group== 'Hybrid',15:length(colnames(blups))], scale = FALSE)
basic_plot <- fviz_pca_ind(res.pca, label= 'none')
ggplot(cbind(basic_plot$data, blups[blups$Group== 'Hybrid',c('Trt', 'Group', 'male')]), aes(x=x, y=y, shape=Group, col = male ))+
geom_point(size=2)+
labs(title = 'PCA', x='Dim1 (82.7%)', y= 'Dim2 (12.4%)')+
#stat_ellipse(type= 't')+
theme_bw(14)
ggplot(cbind(basic_plot$data, blups[blups$Group== 'Hybrid',c('Trt', 'Group', 'male'),]), aes(x=x, y=y, shape=Group, col = male ))+
geom_point(size=2)+
labs(title = 'PCA', x='Dim1 (82.7%)', y= 'Dim2 (12.4%)')+
#stat_ellipse(type= 't')+
theme_bw(14)
View(blups)
