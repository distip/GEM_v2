Ve <- data.frame(VarCorr(spectrum.blup.mod))$vcov[4]
H2 <- Vg/(Vg+(Ve/2))
### The broad-sense heritability can be put in the appropriate place within the
### bands.H2 dataframe using which().
bands.H2[which(bands.H2$bands == bands[j]), 'H2'] <- H2
### The BLUPs centered around the mean can also be calculated and stored in a dataframe.
spectra_comb.blups.temp <- ranef(spectrum.blup.mod)$new_GID + fixef(spectrum.blup.mod)
spectra_comb.blups.temp <- data.frame(rownames(spectra_comb.blups.temp), spectra_comb.blups.temp)
colnames(spectra_comb.blups.temp) <- c('new_GID', bands[j])
### The BLUPs can be merged based on the "genotype" column with the existing dataframes
### in the BLUPs list using the merge() function.
spectra_comb.blups.list <- merge(spectra_comb.blups.list, spectra_comb.blups.temp, by = 'new_GID')
### counters can be used to track the progress
print(j)
}
temp <- temp[, which(colnames(temp) %in% c('new_GID', 'Rep', 'Block', 'ASD', bands[j]))]
colnames(temp)[5] <- 'CHL'
View(temp)
View(spectra_comb.list)
spectra_comb.list<- spectra_comb
bands <- colnames(spectra_comb)[3]
bands
Trt <- as.character(levels(spectra_comb$Trt))
Trt
bands.H2 <- expand.grid(bands)
bands.H2
colnames(bands.H2) <- c('bands')
bands.H2$H2 <- NA
head(bands.H2)
spectra_comb.blups.list <- data.frame(levels(spectra_comb$new_GID))
colnames(spectra_comb.blups.list) <- c('new_GID')
View(spectra_comb.blups.list)
for(j in 1:length(bands)){
### The hyperspectra_combl data from just one N can be stored in a temporary variable.
temp <- spectra_comb.list
### The hyperspectra_combl data from just one band can be pulled out along with the field
### design variables.
temp <- temp[, which(colnames(temp) %in% c('new_GID', 'Rep', 'Block', 'ASD', bands[j]))]
colnames(temp)[5] <- 'CHL'
### The BLUP model is
spectrum.blup.mod <- lmer(CHL ~ (1|new_GID) + (1|ASD) + (1|Rep) , data = temp)
### The variance components can be extracted to calculate broad-sense heritability.
Vg <- data.frame(VarCorr(spectrum.blup.mod))$vcov[1]
Ve <- data.frame(VarCorr(spectrum.blup.mod))$vcov[4]
H2 <- Vg/(Vg+(Ve/2))
### The broad-sense heritability can be put in the appropriate place within the
### bands.H2 dataframe using which().
bands.H2[which(bands.H2$bands == bands[j]), 'H2'] <- H2
### The BLUPs centered around the mean can also be calculated and stored in a dataframe.
spectra_comb.blups.temp <- ranef(spectrum.blup.mod)$new_GID + fixef(spectrum.blup.mod)
spectra_comb.blups.temp <- data.frame(rownames(spectra_comb.blups.temp), spectra_comb.blups.temp)
colnames(spectra_comb.blups.temp) <- c('new_GID', bands[j])
### The BLUPs can be merged based on the "genotype" column with the existing dataframes
### in the BLUPs list using the merge() function.
spectra_comb.blups.list <- merge(spectra_comb.blups.list, spectra_comb.blups.temp, by = 'new_GID')
### counters can be used to track the progress
print(j)
}
temp <- spectra_comb.list
temp <- temp[, which(colnames(temp) %in% c('new_GID', 'Rep', 'Block', 'ASD', bands[j]))]
colnames(temp)[5] <- 'CHL'
spectrum.blup.mod <- lmer(CHL ~ (1|new_GID) + (1|ASD) + (1|Rep) , data = temp)
temp <- spectra_comb.list
bands[j]
temp <- temp[, which(colnames(temp) %in% c('new_GID', 'Rep', 'Block', 'ASD', bands[j]))]
for(j in 1:length(bands)){
### The hyperspectra_combl data from just one N can be stored in a temporary variable.
temp <- spectra_comb.list
### The hyperspectra_combl data from just one band can be pulled out along with the field
### design variables.
temp <- temp[, which(colnames(temp) %in% c('new_GID', 'Rep', 'Block', 'ASD', bands[j]))]
colnames(temp)[2] <- 'CHL'
### The BLUP model is
spectrum.blup.mod <- lmer(CHL ~ (1|new_GID) + (1|ASD) + (1|Rep) , data = temp)
### The variance components can be extracted to calculate broad-sense heritability.
Vg <- data.frame(VarCorr(spectrum.blup.mod))$vcov[1]
Ve <- data.frame(VarCorr(spectrum.blup.mod))$vcov[4]
H2 <- Vg/(Vg+(Ve/2))
### The broad-sense heritability can be put in the appropriate place within the
### bands.H2 dataframe using which().
bands.H2[which(bands.H2$bands == bands[j]), 'H2'] <- H2
### The BLUPs centered around the mean can also be calculated and stored in a dataframe.
spectra_comb.blups.temp <- ranef(spectrum.blup.mod)$new_GID + fixef(spectrum.blup.mod)
spectra_comb.blups.temp <- data.frame(rownames(spectra_comb.blups.temp), spectra_comb.blups.temp)
colnames(spectra_comb.blups.temp) <- c('new_GID', bands[j])
### The BLUPs can be merged based on the "genotype" column with the existing dataframes
### in the BLUPs list using the merge() function.
spectra_comb.blups.list <- merge(spectra_comb.blups.list, spectra_comb.blups.temp, by = 'new_GID')
### counters can be used to track the progress
print(j)
}
bands.H2$bands <- as.character(bands.H2$bands)
bands.H2$bands<- as.numeric(substr(bands.H2$bands,2,5))
for(j in 1:length(bands)){
### The hyperspectra_combl data from just one N can be stored in a temporary variable.
temp <- spectra_comb.list
### The hyperspectra_combl data from just one band can be pulled out along with the field
### design variables.
temp <- temp[, which(colnames(temp) %in% c('new_GID', 'Rep', 'Block', 'ASD', bands[j]))]
colnames(temp)[2] <- 'CHL'
### The BLUP model is
spectrum.blup.mod <- lmer(CHL ~ (1|new_GID) + (1|ASD) + (1|Rep) , data = temp)
### The variance components can be extracted to calculate broad-sense heritability.
Vg <- data.frame(VarCorr(spectrum.blup.mod))$vcov[1]
Ve <- data.frame(VarCorr(spectrum.blup.mod))$vcov[4]
H2 <- Vg/(Vg+(Ve/2))
### The broad-sense heritability can be put in the appropriate place within the
### bands.H2 dataframe using which().
bands.H2[which(bands.H2$bands == bands[j]), 'H2'] <- H2
### The BLUPs centered around the mean can also be calculated and stored in a dataframe.
spectra_comb.blups.temp <- ranef(spectrum.blup.mod)$new_GID + fixef(spectrum.blup.mod)
spectra_comb.blups.temp <- data.frame(rownames(spectra_comb.blups.temp), spectra_comb.blups.temp)
colnames(spectra_comb.blups.temp) <- c('new_GID', bands[j])
### The BLUPs can be merged based on the "genotype" column with the existing dataframes
### in the BLUPs list using the merge() function.
spectra_comb.blups.list <- merge(spectra_comb.blups.list, spectra_comb.blups.temp, by = 'new_GID')
### counters can be used to track the progress
print(j)
}
View(bands.H2)
names(spectra_comb.blups.list) <- sub('.x', '', names(spectra_comb.blups.list))
spectra_comb_columns <- subset(spectra_comb, select = c(1:14))
merged_1 <- merge(spectra_comb_columns, spectra_comb.blups.list, by = 'new_GID')
spectra %>% relocate(CHL , .before = 'X350')
spectra <- spectra %>% relocate(CHL , .before = 'X350')
View(spectra)
spectra_comb <- add_column(spectra, new_GID = new_GID, .after='PLOT.ID')
spectra_comb$Rep <- factor(spectra_comb$Rep)
spectra_comb$Block <- factor(spectra_comb$Block)
spectra_comb$year <- factor(spectra_comb$year)
spectra_comb$genotype <- factor(spectra_comb$genotype)
spectra_comb$note <- factor(spectra_comb$note)
spectra_comb$Trt <- factor(spectra_comb$Trt)
spectra_comb$ASD <- factor(spectra_comb$ASD)
spectra_comb$Group <- factor(spectra_comb$Group)
spectra_comb$rows <- factor(spectra_comb$rows)
spectra_comb$ranges <- factor(spectra_comb$ranges)
spectra_comb$PLOT.ID <- factor(spectra_comb$PLOT.ID)
spectra_comb$ASD  <- factor(spectra_comb$ASD)
spectra_comb$Calibration <- factor(spectra_comb$Calibration)
spectra_comb$new_GID  <- factor(spectra_comb$new_GID)
levels(spectra_comb$Trt)
spectra_comb.list<- spectra_comb
View(spectra_comb.list)
bands <- colnames(spectra_comb)[14]
bands
Trt <- as.character(levels(spectra_comb$Trt))
Trt
bands.H2 <- expand.grid(bands)
bands.H2
colnames(bands.H2) <- c('bands')
bands.H2$H2 <- NA
head(bands.H2)
spectra_comb.blups.list <- data.frame(levels(spectra_comb$new_GID))
colnames(spectra_comb.blups.list) <- c('new_GID')
View(spectra_comb.blups.list)
for(j in 1:length(bands)){
### The hyperspectra_combl data from just one N can be stored in a temporary variable.
temp <- spectra_comb.list
### The hyperspectra_combl data from just one band can be pulled out along with the field
### design variables.
temp <- temp[, which(colnames(temp) %in% c('new_GID', 'Rep', 'Block', 'ASD', bands[j]))]
colnames(temp)[5] <- 'CHL'
### The BLUP model is
spectrum.blup.mod <- lmer(CHL ~ (1|new_GID) + (1|ASD) + (1|Rep) , data = temp)
### The variance components can be extracted to calculate broad-sense heritability.
Vg <- data.frame(VarCorr(spectrum.blup.mod))$vcov[1]
Ve <- data.frame(VarCorr(spectrum.blup.mod))$vcov[4]
H2 <- Vg/(Vg+(Ve/2))
### The broad-sense heritability can be put in the appropriate place within the
### bands.H2 dataframe using which().
bands.H2[which(bands.H2$bands == bands[j]), 'H2'] <- H2
### The BLUPs centered around the mean can also be calculated and stored in a dataframe.
spectra_comb.blups.temp <- ranef(spectrum.blup.mod)$new_GID + fixef(spectrum.blup.mod)
spectra_comb.blups.temp <- data.frame(rownames(spectra_comb.blups.temp), spectra_comb.blups.temp)
colnames(spectra_comb.blups.temp) <- c('new_GID', bands[j])
### The BLUPs can be merged based on the "genotype" column with the existing dataframes
### in the BLUPs list using the merge() function.
spectra_comb.blups.list <- merge(spectra_comb.blups.list, spectra_comb.blups.temp, by = 'new_GID')
### counters can be used to track the progress
print(j)
}
View(bands.H2)
ggplot(bands.H2, aes(bands, H2)) + geom_line()+
labs(title = 'Broad Sense Heritability (Repeatability) of Leaf Spectrum')+
theme_bw()
View(spectra_comb.blups.list)
spectra_comb_columns <- subset(spectra_comb, select = c(1:14))
merged_1 <- merge(spectra_comb_columns, spectra_comb.blups.list, by = 'new_GID')
blups_CHL <- merged_1
blups_CHL$Block <- factor(blups_merged$Block, levels= c('2', '4', '1', '3'))
write.csv(blups_CHL, './blups_CHL.csv', row.names = FALSE)
blups_CHL <- read.csv('blups_CHL.csv')
str(blups_CHL)
blups_CHL$genotype <- factor(blups_CHL$genotype)
blups_CHL$PLOT.ID <- factor(blups_CHL$PLOT.ID)
blups_CHL$rows <- factor(blups_CHL$rows)
blups_CHL$ranges <- factor(blups_CHL$ranges)
blups_CHL$Block <- factor(blups_CHL$Block)
blups_CHL$Rep <- factor(blups_CHL$Rep)
blups_CHL$Trt  <- factor(blups_CHL$Trt)
blups_CHL$year <- factor(blups_CHL$year)
blups_CHL$note <- factor(blups_CHL$note)
blups_CHL$Calibration <- factor(blups_CHL$Calibration)
blups_CHL$ASD <- factor(blups_CHL$ASD)
blups_CHL$new_GID <- factor(blups_CHL$new_GID)
blups_CHL <- blups_CHL[blups_CHL$Rep == 2 , ]
View(blups_CHL)
spectra_comb_columns <- subset(spectra_comb, select = c(1:13))
merged_1 <- merge(spectra_comb_columns, spectra_comb.blups.list, by = 'new_GID')
blups_CHL <- merged_1
blups_CHL$Block <- factor(blups_merged$Block, levels= c('2', '4', '1', '3'))
write.csv(blups_CHL, './blups_CHL.csv', row.names = FALSE)
blups_CHL <- read.csv('blups_CHL.csv')
str(blups_CHL)
blups_CHL$genotype <- factor(blups_CHL$genotype)
blups_CHL$PLOT.ID <- factor(blups_CHL$PLOT.ID)
blups_CHL$rows <- factor(blups_CHL$rows)
blups_CHL$ranges <- factor(blups_CHL$ranges)
blups_CHL$Block <- factor(blups_CHL$Block)
blups_CHL$Rep <- factor(blups_CHL$Rep)
blups_CHL$Trt  <- factor(blups_CHL$Trt)
blups_CHL$year <- factor(blups_CHL$year)
blups_CHL$note <- factor(blups_CHL$note)
blups_CHL$Calibration <- factor(blups_CHL$Calibration)
blups_CHL$ASD <- factor(blups_CHL$ASD)
blups_CHL$new_GID <- factor(blups_CHL$new_GID)
blups_CHL <- blups_CHL[blups_CHL$Rep == 2 , ]
View(blups_CHL)
library(tidyverse)
GWAS_data <- read.csv('blups_mergedv2_with_gwas_ids.csv')
View(GWAS_data)
GWAS_data <- read.csv('blups_mergedv2_with_gwas_ids.csv')
View(GWAS_data)
blups_CHL$Block <- factor(blups_merged$Block, levels= c('2', '4', '1', '3'))
View(blups_CHL)
write.csv(blups_CHL, './blups_CHL.csv', row.names = FALSE)
GWAS_data <- read.csv('blups_CHL_with_gwas_ids')
View(GWAS_data)
GWAS_data_HN <- GWAS_data[GWAS_data$Trt == 'HN', ]
GWAS <- subset(GWAS_data_HN, select = c(CHL))
View(GWAS)
GWAS <- subset(GWAS_data_HN, select = c(UID ,CHL))
View(GWAS)
write.csv(GWAS, './pheno_CHL_HN.csv', row.names = FALSE)
GWAS_data_HN <- GWAS_data[GWAS_data$Trt == 'LN', ]
GWAS <- subset(GWAS_data_HN, select = c(UID ,CHL))
write.csv(GWAS, './pheno_CHL_LN.csv', row.names = FALSE)
View(GWAS)
View(blups.melt)
rm(blups.melt)
gc()
View spectra_comb
View(spectra_comb)
CHL<-spectra_comb ## from blups calculation document
hist(CHL$CHL)
data<-spectra_comb ## from blups calculation document
head(data)
data.blue.mod<-lmer(CHL~ genotype + (1|Trt) + (1|Rep:Trt) + (1|ASD) , data=data)
library(lme4)
library(reshape2)
library(ggplot2)
library(rrBLUP)
data.blue.mod<-lmer(CHL~ genotype + (1|Trt) + (1|Rep:Trt) + (1|ASD) , data=data)
View(data.blue.mod)
fixef(data.blue.mod)[1:10]
data.int<-fixef(data.blue.mod)[1]
data.int
data.blues<-fixef(data.blue.mod)
data.blues[-1]<-data.blues[-1]+data.int
names(data.blues)[1:10]
View(data.blues)
gsub("new_GID", "", names(data.blues))[1:10]
names(data.blues)<-gsub("new_GID", "", names(data.blues))
data.blues[1:10]
data.blues<-data.frame(names(data.blues), data.blues)
colnames(data.blues)<-c("new_GID", "grain.data.blue")
head(data.blues)
hist(data.blues$grain.data.blue)
View(data.blues)
fixef(data.blue.mod)[1:10]
data.int<-fixef(data.blue.mod)[1]
data.int
data.blues<-fixef(data.blue.mod)
data.blues[-1]<-data.blues[-1]+data.int
names(data.blues)[1:10]
names(data.blues)[1]<-levels(data$new_GID)[1]
gsub("genotype", "", names(data.blues))[1:10]
names(data.blues)<-gsub("genotype", "", names(data.blues))
data.blues[1:10]
data.blues<-data.frame(names(data.blues), data.blues)
colnames(data.blues)<-c("genotype", "CHL")
head(data.blues)
hist(data.blues$grain.data.blue)
data.blue.mod<-lmer(CHL~ genotype + (1|Trt) + (1|Rep:Trt) + (1|ASD) , data=data)
fixef(data.blue.mod)[1:10]
data.int<-fixef(data.blue.mod)[1]
data.int
data.blues<-fixef(data.blue.mod)
data.blues[-1]<-data.blues[-1]+data.int
names(data.blues)[1:10]
names(data.blues)[1]<-levels(data$new_GID)[1]
gsub("genotype", "", names(data.blues))[1:10]
names(data.blues)<-gsub("genotype", "", names(data.blues))
data.blues[1:10]
data.blues<-data.frame(names(data.blues), data.blues)
colnames(data.blues)<-c("genotype", "CHL")
head(data.blues)
hist(data.blues$grain.data.blue)
fixef(data.blue.mod)[1:10]
data.int<-fixef(data.blue.mod)[1]
data.int
data.blues<-fixef(data.blue.mod)
data.blues[-1]<-data.blues[-1]+data.int
names(data.blues)[1:10]
names(data.blues)[1]<-levels(data$genoype)[1]
gsub("genotype", "", names(data.blues))[1:10]
names(data.blues)<-gsub("genotype", "", names(data.blues))
data.blues[1:10]
data.blues<-data.frame(names(data.blues), data.blues)
colnames(data.blues)<-c("genotype", "CHL")
head(data.blues)
hist(data.blues$grain.data.blue)
hist(data.blues$grain.data.blue)
head(data.blues)
hist(data.blues$CHL)
write.csv(blues_CHL, './blues_CHL.csv', row.names = FALSE)
write.csv(data_blues, './blues_CHL.csv', row.names = FALSE)
write.csv(data.blues, './blues_CHL.csv', row.names = FALSE)
GWAS_data <- read.csv('blues_CHL_with_gwas_ids.csv')
View(GWAS_data)
GWAS_data_HN <- GWAS_data
GWAS <- subset(GWAS_data_HN, select = c(UID ,CHL))
write.csv(GWAS, './pheno_CHL_blues.csv', row.names = FALSE)
View(GWAS)
View(GWAS)
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
View(spectra)
spectra$Rep <- factor(spectra$Rep)
spectra$Block <- factor(spectra$Block)
spectra$year <- factor(spectra$year)
spectra$genotype <- factor(spectra$genotype)
spectra$note <- factor(spectra$note)
spectra$Trt <- factor(spectra$Trt)
spectra$ASD <- factor(spectra$ASD)
spectra$Group <- factor(spectra$Group)
spectra$rows <- factor(spectra$rows)
spectra$ranges <- factor(spectra$ranges)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra$ASD  <- factor(spectra$ASD)
spectra$Calibration <- factor(spectra$Calibration)
spectra <- subset(spectra, select = -c(Unnamed..0, X))
spectra <- subset(spectra, select = -c( X))
spectra <- spectra %>% relocate(CHL , .before = 'X350')
new_GID <- paste(spectra$genotype, spectra$Trt, sep= "_")
spectra_comb <- add_column(spectra, new_GID = new_GID, .after='PLOT.ID')
str(spectra_comb)
spectra_comb$Rep <- factor(spectra_comb$Rep)
spectra_comb$Block <- factor(spectra_comb$Block)
spectra_comb$year <- factor(spectra_comb$year)
spectra_comb$genotype <- factor(spectra_comb$genotype)
spectra_comb$note <- factor(spectra_comb$note)
spectra_comb$Trt <- factor(spectra_comb$Trt)
spectra_comb$ASD <- factor(spectra_comb$ASD)
spectra_comb$Group <- factor(spectra_comb$Group)
spectra_comb$rows <- factor(spectra_comb$rows)
spectra_comb$ranges <- factor(spectra_comb$ranges)
spectra_comb$PLOT.ID <- factor(spectra_comb$PLOT.ID)
spectra_comb$ASD  <- factor(spectra_comb$ASD)
spectra_comb$Calibration <- factor(spectra_comb$Calibration)
spectra_comb$new_GID  <- factor(spectra_comb$new_GID)
levels(spectra_comb$Trt)
spectra_comb.list<- spectra_comb
View(spectra_comb.list)
data<- spectra_comb.list
data.blue.mod<-lmer(CHL~ genotype + (1|Trt) + (1|Rep:Trt) + (1|ASD) , data=data)
library(lme4)
library(reshape2)
library(ggplot2)
library(rrBLUP)
data.blue.mod<-lmer(CHL~ genotype + (1|Trt) + (1|Rep:Trt) + (1|ASD) , data=data)
fixef(data.blue.mod)[1:10]
data.int<-fixef(data.blue.mod)[1]
data.int
data.blues<-fixef(data.blue.mod)
data.blues[-1]
View(data.blues[-1])
data.blues[-1]<-data.blues[-1]+data.int
names(data.blues)[1:10]
names(data.blues)[1]<-levels(data$genoype)[1]
gsub("genotype", "", names(data.blues))[1:10]
names(data.blues)<-gsub("genotype", "", names(data.blues))
data.blues[1:10]
data.blues<-data.frame(names(data.blues), data.blues)
colnames(data.blues)<-c("genotype", "CHL")
head(data.blues)
hist(data.blues$CHL)
write.csv(data.blues, './blues_CHL.csv', row.names = FALSE)
View(data.blues)
Vies(data.blues)
View(data.blues)
library(tidyverse)
GWAS_data <- read.csv('blues_CHL_with_gwas_ids.csv')
View(GWAS_data)
GWAS <- subset(GWAS_data_HN, select = c(UID ,CHL))
write.csv(GWAS, './pheno_CHL_blues.csv', row.names = FALSE)
data<- spectra_comb.list
View(spectra_comb.list)
data<- spectra_comb.list[spectra_comb.list['Group'] == 'Inbred' , ]
View(data)
data.blue.mod<-lmer(CHL~ genotype + (1|Trt) + (1|Rep:Trt) + (1|ASD) , data=data)
library(lme4)
library(reshape2)
library(ggplot2)
library(rrBLUP)
data.blue.mod<-lmer(CHL~ genotype + (1|Trt) + (1|Rep:Trt) + (1|ASD) , data=data)
fixef(data.blue.mod)[1:10]
data.int<-fixef(data.blue.mod)[1]
data.int
f
data.blues<-fixef(data.blue.mod)
data.blues[-1]<-data.blues[-1]+data.int
names(data.blues)[1:10]
names(data.blues)[1]<-levels(data$genoype)[1]
gsub("genotype", "", names(data.blues))[1:10]
names(data.blues)<-gsub("genotype", "", names(data.blues))
data.blues[1:10]
data.blues<-data.frame(names(data.blues), data.blues)
colnames(data.blues)<-c("genotype", "CHL")
hist(data.blues$CHL)
write.csv(data.blues, './blues_CHL_only_inbreds.csv', row.names = FALSE)
GWAS_data <- read.csv('blues_CHL_with_gwas_ids_only_inbreds.csvgwas_ids.csv')
GWAS_data_HN <- GWAS_data
GWAS <- subset(GWAS_data_HN, select = c(UID ,CHL))
write.csv(GWAS, './pheno_CHL_blues_only_inbreds.csv', row.names = FALSE)
View(GWAS)
View(GWAS)
GWAS_data <- read.csv('blues_CHL_with_gwas_ids_only_inbreds.csvgwas_ids.csv')
GWAS_data <- read.csv('blues_CHL_with_gwas_ids_only_inbreds.csv')
View(GWAS_data)
GWAS_data_HN <- GWAS_data
GWAS <- subset(GWAS_data_HN, select = c(UID ,CHL))
write.csv(GWAS, './pheno_CHL_blues_only_inbreds.csv', row.names = FALSE)
View(GWAS)
GWAS_data <- read.csv('blues_CHL_with_gwas_ids_only_inbreds.csv')
View(GWAS_data)
GWAS_data_HN <- GWAS_data
GWAS <- subset(GWAS_data_HN, select = c(UID ,CHL))
View(GWAS)
GWAS_data <- read.csv('blues_CHL_with_gwas_ids.csv')
GWAS_data_HN <- GWAS_data
GWAS <- subset(GWAS_data_HN, select = c(UID ,CHL))
View(GWAS)
GWAS_data <- read.csv('blues_CHL_with_gwas_ids_only_inbreds.csv')
View(GWAS_data)
GWAS_data_HN <- GWAS_data
GWAS <- subset(GWAS_data_HN, select = c(UID ,CHL))
View(GWAS)
spectra <- read.csv("Raw_spectrum_merged")
View(spectra)
str(spectra)
spectra$Rep <- factor(spectra$Rep)
spectra$Block <- factor(spectra$Block)
spectra$year <- factor(spectra$year)
spectra$genotype <- factor(spectra$genotype)
spectra$note <- factor(spectra$note)
spectra$Trt <- factor(spectra$Trt)
spectra$ASD <- factor(spectra$ASD)
spectra$Group <- factor(spectra$Group)
spectra$rows <- factor(spectra$rows)
spectra$ranges <- factor(spectra$ranges)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra$ASD  <- factor(spectra$ASD)
spectra$Calibration <- factor(spectra$Calibration)
spectra <- subset(spectra, select = -c(Unnamed..0, X))
spectra <- read.csv("Raw_spectrum_merged")
View(spectra)
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
View(spectra)
str(spectra)
spectra$Rep <- factor(spectra$Rep)
spectra$Block <- factor(spectra$Block)
spectra$year <- factor(spectra$year)
spectra$genotype <- factor(spectra$genotype)
spectra$note <- factor(spectra$note)
spectra$Trt <- factor(spectra$Trt)
spectra$ASD <- factor(spectra$ASD)
spectra$Group <- factor(spectra$Group)
spectra$rows <- factor(spectra$rows)
spectra$ranges <- factor(spectra$ranges)
spectra$PLOT.ID <- factor(spectra$PLOT.ID)
spectra$ASD  <- factor(spectra$ASD)
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
View(spectra)
spectra$Rep <- factor(spectra$Rep)
spectra$Block <- factor(spectra$Block)
spectra$year <- factor(spectra$year)
spectra$genotype <- factor(spectra$genotype)
spectra$note <- factor(spectra$note)
spectra$Trt <- factor(spectra$Trt)
spectra$ASD <- factor(spectra$ASD)
spectra$Group <- factor(spectra$Group)
spectra$rows <- factor(spectra$rows)
View(spectra.blues.sub.melt)
rm(spectra.blues.sub.melt)
gc()
GWAS_data <- read.csv('blues_CHL_with_gwas_ids_only_inbreds.csv')
View(GWAS_data)
spectra <- read.csv("Raw_spectrum_merged_predicted_CHL")
View(spectra)
rm(list = ls())
gc()
